// Custom.scss
// Option B: Include parts of Bootstrap

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "bootstrap/scss/functions";

// note: moved import of variables to the top, so they are available in all functions
@import "bootstrap/scss/variables";

// 2. Include any default variable overrides here
// enable bootstrap's CSS grid system
$enable-cssgrid: true;

// Toggle global options
$enable-gradients: true;
$enable-shadows: false;
$enable-negative-margins: true;

$spacers: map-merge(
  (
    '25pz': 25%,
    '50pz': 50%,
    '75pz': 75%,
    '100pz': 100%
  ),
  $spacers
);
$negative-spacers: if($enable-negative-margins, negativify-map($spacers), null);

//Fonts
$font-family-serif: "Zapfino";

// custom variables (naming convention based on bootstrap variables)
$icon-font-size-base: $font-size-base * 1.5;
$icon-font-size-sm: $font-size-sm * 1.5;
$icon-font-size-lg: $font-size-lg * 2;
$icon-font-size-xl: $font-size-lg * 3.2;

// Colors

/* Overwrite Bootstrap variables */
// Fonts
$font-family-sans-serif:
  "Montserrat",
  "Twemoji Mozilla",
  "Apple Color Emoji",
  "Segoe UI Emoji",
  "Segoe UI Symbol",
  "Noto Color Emoji",
  "EmojiOne Color",
  "Android Emoji",
  sans-serif;
$font-family-base:        $font-family-sans-serif;
$font-weight-bold:        600;
$headings-font-weight:    400;


// Colors

// -- Theming

// -- Borders
$border-color: #000;
$border-radius: 0.25rem;

// -- Buttons
$btn-close-opacity: 1;
$btn-close-hover-opacity: .75;

// -- Cards
$card-border-radius: $border-radius;
$card-bg: var(--cm-card-bg);
$card-color: var(--cm-card-color);


// -- Forms
$input-btn-focus-box-shadow: none;
$form-text-color: var(--bs-body-color);
$form-check-label-disabled-opacity: 1;
$input-focus-border-color: rgba(black, 0.25);

// -- Figures
$figure-caption-color: var(--bs-body-color);

// -- Navs
$navbar-color:                      rgba(var(--bs-navbar-color-rgb), var(--bs-bg-opacity));

$navbar-link-color:                 var(--bs-nav-link-color);
$navbar-link-active-color:          $navbar-link-color;

$navbar-light-color:                $navbar-link-color;
$navbar-light-active-color:         $navbar-link-active-color;
$navbar-light-hover-color:          rgba(var(--bs-nav-link-color-rgb), .75);

$navbar-dark-color:                 $navbar-link-color;
$navbar-dark-active-color:          $navbar-link-active-color;
$navbar-dark-hover-color:           rgba(var(--bs-nav-link-color-rgb), .75);

$navbar-dark-toggler-icon-bg:       escape-svg(url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'><path stroke='#fff' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>"));

$navbar-dark-toggler-border-color:  transparent;
$navbar-light-toggler-border-color: transparent;

// custom variables (naming convention based on bootstrap variables)
$navbar-dropdown-bg:                       var(--bs-navbar-color);
$navbar-dropdown-box-shadow:               none;

$navbar-dropdown-link-color:               $navbar-link-color;

$navbar-dropdown-link-hover-color:         $navbar-light-hover-color;
$navbar-dropdown-link-hover-bg:            $navbar-dropdown-bg;

$navbar-dropdown-link-active-color:        $navbar-light-active-color;
$navbar-dropdown-link-active-bg:           $navbar-dropdown-bg;

$nav-offcanvas-bg-color:                   var(--cm-navigation-offcanvas-bg-color, $navbar-color);


// Buttons
$navbar-toggler-focus-width: 0;
$input-btn-focus-width: .1rem;


// Dropdowns
$dropdown-padding-y: 0;
$dropdown-border-radius: 0;
$dropdown-border-width: 0;


// Etc.
$offcanvas-box-shadow: none;
$offcanvas-border-width: 0;
$text-muted: var(--cm-text-muted);


// 3. Include remainder of required Bootstrap stylesheets
// @import "bootstrap/scss/variables";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/root";

// 4. Include any optional Bootstrap CSS as needed
@import "bootstrap/scss/utilities";
@import "bootstrap/scss/root";
@import "bootstrap/scss/reboot";
@import "bootstrap/scss/type";
@import "bootstrap/scss/images";
@import "bootstrap/scss/containers";
@import "bootstrap/scss/grid";
// @import "bootstrap/scss/tables";
@import "bootstrap/scss/forms";
@import "bootstrap/scss/buttons";
@import "bootstrap/scss/transitions";
@import "bootstrap/scss/dropdown";
@import "bootstrap/scss/button-group";
@import "bootstrap/scss/nav";
@import "bootstrap/scss/navbar";
@import "bootstrap/scss/card";
@import "bootstrap/scss/accordion";
// @import "bootstrap/scss/breadcrumb";
// @import "bootstrap/scss/pagination";
// @import "bootstrap/scss/badge";
@import "bootstrap/scss/alert";
// @import "bootstrap/scss/progress";
@import "bootstrap/scss/list-group";
@import "bootstrap/scss/close";
@import "bootstrap/scss/toasts";
@import "bootstrap/scss/modal";
@import "bootstrap/scss/tooltip";
@import "bootstrap/scss/popover";
@import "bootstrap/scss/carousel";
// @import "bootstrap/scss/spinners";
@import "bootstrap/scss/offcanvas";
@import "bootstrap/scss/placeholders";

@import "bootstrap/scss/helpers"; // TODO doesnt work â€“> why?

// 5. Optionally customize utilities API
$utilities: map-merge(
  $utilities,
  (
    "width": map-merge(
      map-get($utilities, "width"),
      (
        values: map-merge(
          map-get(map-get($utilities, "width"), "values"),
          (7: 7%),
        ),
      ),
    ),
  ),
);
$utilities: map-merge(
  $utilities,
  (
    "viewport-height": map-merge(
      map-get($utilities, "viewport-height"),
      (
        values: map-merge(
          map-get(map-get($utilities, "viewport-height"), "values"),
          (
            10: 10vh,
            25: 25vh,
            50: 50vh,
            75: 75vh,
          ),
        ),
      ),
    ),
  ),
);
$utilities: map-merge(
  $utilities,
  (
    "text-align": map-merge(
      map-get($utilities, "text-align"),
      (
        values: map-merge(
          map-get(map-get($utilities, "text-align"), "values"),
          ('justify': justify),
        ),
      ),
    ),
  )
);
$utilities: map-merge(
  $utilities,
  (
    "border-color": map-merge(
      map-get($utilities, "border-color"),
      (
        values: map-merge(
          map-get(map-get($utilities, "border-color"), "values"),
          ('transparent': rgba(0,0,0,0)),
        ),
      ),
    ),
  )
);

// 6. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import "bootstrap/scss/utilities/api";

// 7. Add additional custom code here
.bg-no-gradient {
  background-image: none !important;
}

.card-horizontal img {
  @extend .rounded-start;
}
// @include media-breakpoint-down(sm) {
//   .card-horizontal img {
//     @extend .rounded-top;
//   }
// }